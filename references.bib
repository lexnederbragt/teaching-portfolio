@article{wilson_good_2017,
title           = {Good enough practices in scientific computing},
volume          = {13},
issn            = {1553-7358},
url             = {http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005510},
doi             = {10.1371/journal.pcbi.1005510},
abstract        = {Author summary Computers are now essential in all branches of science, but most researchers are never taught the equivalent of basic lab skills for research computing. As a result, data can get lost, analyses can take much longer than necessary, and researchers are limited in how effectively they can work with software and data. Computing workflows need to follow the same practices as lab projects and notebooks, with organized data, documented steps, and the project structured for reproducibility, but researchers new to computing often don't know where to start. This paper presents a set of good computing practices that every researcher can adopt, regardless of their current level of computational skill. These practices, which encompass data management, programming, collaborating with colleagues, organizing projects, tracking work, and writing manuscripts, are drawn from a wide variety of published sources from our daily lives and from our work with volunteer organizations that have delivered workshops to over 11,000 people since 2010.},
number          = {6},
urldate         = {2017-06-22},
journal         = {PLOS Computational Biology},
author          = {Wilson, Greg and Bryan, Jennifer and Cranston, Karen and Kitzes, Justin and Nederbragt, Lex and Teal, Tracy K.},
month           = {jun},
year            = {2017},
keywords        = {Computer software, Control systems, Data management, Data processing, Programming languages, Reproducibility, Software tools, Source code},
pages           = {e1005510},
file            = {Full Text PDF:/Users/alexajo/Zotero/storage/764KVKF7/Wilson et al. - 2017 - Good enough practices in scientific computing.pdf:application/pdf;Snapshot:/Users/alexajo/Zotero/storage/CHNZU8NT/article.html:text/html},
}

@book{biggsTeachingQualityLearning2011,
title           = {Teaching for Quality Learning at University: What the Student Does},
shorttitle      = {Teaching for Quality Learning at University},
author          = {Biggs, John B and Tang, Catherine So-kum},
year            = {2011},
publisher       = {{McGraw-Hill/Society for Research into Higher Education ; Open University Press}},
address         = {{Philadelphia, Pa.]; Maidenhead, Berkshire, England; New York}},
abstract        = {This best-selling book explains the concept of constructive alignment in education and aids implementation of this in teaching practice.},
annotation      = {OCLC: 779842628},
isbn            = {978-0-335-24276-4},
language        = {English},
}

@article{biggsWhatStudentDoes2012,
title           = {What the Student Does: Teaching for Enhanced Learning},
shorttitle      = {What the Student Does},
author          = {Biggs, John},
year            = {2012},
month           = {feb},
volume          = {31},
pages           = {39--55},
publisher       = {{Routledge}},
issn            = {0729-4360},
doi             = {10.1080/07294360.2012.642839},
abstract        = {Many teachers see major difficulties in maintaining academic standards in today's larger and more diversified classes. The problem becomes more tractable if learning outcomes are seen as more a function of students' activities than of their fixed characteristics. The teacher's job is then to organise the teaching/learning context so that all students are more likely to use the higher order learning processes which ``academic'' students use spontaneously. This may be achieved when all components are aligned, so that objectives express the kinds of understanding that we want from students, the teaching context encourages students to undertake the learning activities likely to achieve those understandings, and the assessment tasks tell students what activities are required of them, and tell us how well the objectives have been met. Two examples of aligned teaching systems are described: problem-based learning and the learning portfolio.},
annotation      = {\_eprint: https://doi.org/10.1080/07294360.2012.642839},
journal         = {Higher Education Research \& Development},
number          = {1},
}

@book{fisherBetterLearningStructured2013,
title           = {Better {{Learning Through Structured Teaching}}: {{A Framework}} for the {{Gradual Release}} of {{Responsibility}}},
shorttitle      = {Better {{Learning Through Structured Teaching}}},
author          = {Fisher, Douglas and Frey, Nancy},
year            = {2013},
month           = {dec},
publisher       = {{ASCD}},
abstract        = {In this updated 2nd edition of the ASCD best-seller, Douglas Fisher and Nancy Frey dig deeper into the hows and whys of the gradual release of responsibility instructional framework. To gradually release responsibility is to equip students with what they need to be engaged and self-directed learners. On a day-to-day level, it means delivering lessons purposefully planned to incorporate four essential and interrelated instructional phases: 1. Focused Instruction: Preparing students for learning by establishing lesson purpose, modeling strategies and skills, thinking aloud, and noticing how students respond. 2. Guided Instruction: Strategically using prompts, cues, and questions to lead students to new understanding. 3. Collaborative Learning: Allowing students to consolidate their understanding through exploration, problem-solving, discussion, and thinking with their peers. 4. Independent Learning: Requiring students to use the skills and knowledge they've acquired to create authentic products and ask new questions. The authors explore each phase, using real-life examples from a variety of disciplines. You'll find tips and tools for classroom implementation, including checklists for planning and assessment; advice on feedback, homework, group work, differentiated instruction, and blended learning; answers to frequently asked questions; and examples that align to Common Core State Standards. No matter what grade level or subject you teach, Better Learning Through Structured Teaching is your essential guide to helping students expand their capacity for successful and long-lasting learning.},
googlebooks     = {0BFRBAAAQBAJ},
isbn            = {978-1-4166-1830-0},
keywords        = {Education / General},
language        = {en},
}

@phdthesis{halandProgrammeringBiovitenskapeligeProblemstillinger2019,
title           = {{Programmering i biovitenskapelige problemstillinger}},
author          = {H{\aa}land, Lars Erik Revheim},
year            = {2019},
abstract        = {Programmering f\aa r en stadig sterkere rolle i de ulike realfagene. Dette ser vi gjennom fagfornyelsen i norsk grunn- og videreg\aa ende skole, og p\aa{} behovet i n\ae ringslivet. Universitetet i Oslo er blant de f\o rste i Norge til \aa{} innf\o re programmering som en obligatorisk del av realfagene. Siden realfaglig programmering er s\aa, er det behov for forskning p\aa{} dette feltet. I min studie har jeg fors\o kt \aa{} kartlegge hvordan biologistudenter arbeider med programmeringsoppgaver. Informantene i denne studien har v\ae rt tre grupper med studenter som tar emnet \guillemotleft Innf\o ring i beregningsorienterte modeller i biovitenskap\guillemotright{} (BIOS1100), et obligatorisk emne for alle studenter som studerer biovitenskap ved UiO. Studien har blitt gjennomf\o rt ved \aa{} bruke en kombinasjon av fokusgruppeintervju og observasjon av gruppearbeid. I tillegg har jeg anvendt et sp\o rsm\aa l i et sp\o rreskjema som ble gitt ut til alle studentene ved BIOS1100. Funnene fra denne studien viser at studentene m\o ter en rekke utfordringer n\aa r de programmerer i biovitenskapelige emner. Utfordringene er i stor grad knyttet til \aa{} lage store programmer, forst\aa{} hva som skal programmerers, bruke ulike programstrukturer og anvende matematikk. Jeg argumenterer for at mange av disse utfordringene er en konsekvens av manglende strategisk kunnskap hos studentene. I hovedsak viser studentene til to typer strategier n\aa r de programmerer; 1) bruk av eksempelprogrammer, 2) pr\o ving og feiling. Videre ser vi at biovitenskapelige problemstillinger har liten p\aa virkning p\aa{} arbeidet med \aa{} skrive programmer, men at det b\aa de kan ha positiv og negativ effekt p\aa{} studentenes ferdigheter/l\ae ring til \aa{} l\o se programmeringsoppgaver. Samtidig virker studentene \aa{} ha st\o rre interesse for programmering n\aa r de f\aa r arbeide med biovitenskapelige problemstillinger. Til slutt ser vi at studentene for det meste programmerer i grupper og at dette kan ha b\aa de positive og negative f\o lger for studentenes l\ae ring av programmering. I denne studien argumenterer jeg for at probleml\o sning b\o r vektlegges i programmeringskurs. Her kan \guillemotleft Computational thinking\guillemotright{} v\ae re en nyttig probleml\o sningsstrategi for \aa{} l\ae re studentene hvordan de bedre og mer effektivt l\o ser programmeringsoppgaver.},
annotation      = {Accepted: 2019-09-23T23:46:36Z},
language        = {nob},
}

@book{mazurPeerInstructionUser1997,
title           = {Peer Instruction: A User's Manual},
shorttitle      = {Peer Instruction},
author          = {Mazur, Eric},
year            = {1997},
publisher       = {{Prentice Hall}},
address         = {{Upper Saddle River, N.J.}},
abstract        = {Mazur shows teachers how to teach students of physics that they can understand memorization as a different alternative to mathematics. He describes interactive teaching, including different types of lecturing and group study, as a method of teaching physics.},
annotation      = {OCLC: 34788471},
isbn            = {978-0-13-565441-5},
language        = {English},
}

@article{millerMagicalNumberSeven1956,
title           = {The Magical Number Seven, plus or Minus Two: Some Limits on Our Capacity for Processing Information.},
author          = {Miller, George A.},
year            = {1956},
volume          = {63},
pages           = {81--97},
publisher       = {{American Psychological Association}},
address         = {{US}},
issn            = {1939-1471(Electronic),0033-295X(Print)},
doi             = {10.1037/h0043158},
abstract        = {A variety of researches are examined from the standpoint of information theory. It is shown that the unaided observer is severely limited in terms of the amount of information he can receive, process, and remember. However, it is shown that by the use of various techniques, e.g., use of several stimulus dimensions, recoding, and various mnemonic devices, this informational bottleneck can be broken. 20 references. (PsycINFO Database Record (c) 2016 APA, all rights reserved)},
journal         = {Psychological Review},
keywords        = {*Cognitive Processes,Information Theory},
number          = {2},
}

@article{nederbragtTenQuickTips2020,
title           = {Ten Quick Tips for Teaching with Participatory Live Coding},
author          = {Nederbragt, Alexander and Harris, Rayna Michelle and Hill, Alison Presmanes and Wilson, Greg},
year            = {2020},
month           = {sep},
volume          = {16},
pages           = {e1008090},
publisher       = {{Public Library of Science}},
issn            = {1553-7358},
doi             = {10.1371/journal.pcbi.1008090},
journal         = {PLOS Computational Biology},
keywords        = {Computer software,Eyes,Human learning,Instructors,Learning,Personal computers,Textbooks,Workshops},
language        = {en},
number          = {9},
}

@inproceedings{porterMultiinstitutionalStudyPeer2016,
title           = {A {{Multi}}-Institutional {{Study}} of {{Peer Instruction}} in {{Introductory Computing}}},
booktitle       = {Proceedings of the 47th {{ACM Technical Symposium}} on {{Computing Science Education}}},
author          = {Porter, Leo and Bouvier, Dennis and Cutts, Quintin and Grissom, Scott and Lee, Cynthia and McCartney, Robert and Zingaro, Daniel and Simon, Beth},
year            = {2016},
month           = {feb},
pages           = {358--363},
publisher       = {{Association for Computing Machinery}},
address         = {{New York, NY, USA}},
doi             = {10.1145/2839509.2844642},
abstract        = {Peer Instruction (PI) is a student-centric pedagogy in which students move from the role of passive listeners to active participants in the classroom. Over the past five years, there have been a number of research articles regarding the value of PI in computer science. The present work adds to this body of knowledge by examining outcomes from seven introductory programming instructors: three novices to PI and four with a range of PI experience. Through common measurements of student perceptions, we provide evidence that introductory computing instructors can successfully implement PI in their classrooms. We find encouraging minimum (74\%) and average (92\%) levels of success as measured through student valuation of PI for their learning. This work also documents and hypothesizes reasons for comparatively poor survey results in one course, highlighting the importance of the choice of grading policy (participation vs. correctness) for new PI adopters.},
isbn            = {978-1-4503-3685-7},
keywords        = {clickers,faculty adoption,peer instruction},
series          = {{{SIGCSE}} '16},
}

@article{porterSuccessIntroductoryProgramming2013,
title           = {Success in Introductory Programming: What Works?},
shorttitle      = {Success in Introductory Programming},
author          = {Porter, Leo and Guzdial, Mark and McDowell, Charlie and Simon, Beth},
year            = {2013},
month           = {aug},
volume          = {56},
pages           = {34--36},
issn            = {0001-0782},
doi             = {10.1145/2492007.2492020},
abstract        = {How pair programming, peer instruction, and media computation have improved computer science education.},
journal         = {Communications of the ACM},
number          = {8},
}

@misc{TeachingTechTogethera,
title           = {Teaching {{Tech Together}}: {{How}} to {{Make Your Lessons Work}} and {{Build}} a {{Teaching Community}} around {{Them}}},
shorttitle      = {Teaching {{Tech Together}}},
abstract        = {Hundreds of grassroots groups have sprung up around the world to teach programming, web design, robotics, and other skills outside traditional classrooms. These groups exist so that people don't have to learn these things on their own, but ironically, their founders and instructors are often teaching themselves how to teach. There's a better way. This book presents evidence-based practices that will help you create and deliver lessons that work and build a teaching community around them. Topics},
howpublished    = {https://www.routledge.com/Teaching-Tech-Together-How-to-Make-Your-Lessons-Work-and-Build-a-Teaching/Wilson/p/book/9780367352974},
journal         = {Routledge \& CRC Press},
language        = {en},
}
